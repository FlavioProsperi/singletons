Singletons/Empty.hs:(0,0)-(0,0): Splicing declarations
    singletons [d| data Empty |]
  ======>
    data Empty
    data SEmpty (z :: Empty)
    type instance Sing = (SEmpty :: Empty -> GHC.Types.Type)
    instance SingKind Empty where
      type Demote Empty = Empty
      fromSing x = case x of
      toSing x = SomeSing (case x of)
