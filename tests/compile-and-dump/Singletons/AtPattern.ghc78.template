INSERT tests/compile-and-dump/Singletons/Nat.ghc78.template
Singletons/AtPattern.hs:0:0: Splicing declarations
    singletons
      [d| maybePlus :: Maybe Nat -> Maybe Nat
          maybePlus (Just n) = Just (plus (Succ Zero) n)
          maybePlus foo@Nothing = foo |]
  ======>
    Singletons/AtPattern.hs:(0,0)-(0,0)
    maybePlus :: Maybe Nat -> Maybe Nat
    maybePlus (Just n) = Just (plus (Succ Zero) n)
    maybePlus foo@Nothing = foo
    type family MaybePlus (a :: Maybe Nat) :: Maybe Nat where
         MaybePlus (Just n) = Apply JustSym0 (Apply (Apply PlusSym0 (Apply SuccSym0 ZeroSym0)) n)
         MaybePlus Nothing = NothingSym0 -- BUG #20
    data MaybePlusSym0 (a :: TyFun (Maybe Nat) (Maybe Nat))
    type instance Apply MaybePlusSym0 a = MaybePlus a
    sMaybePlus :: forall (t :: Maybe Nat). Sing t -> Sing (MaybePlus t)
    sMaybePlus (SJust n) = SJust (sPlus (SSucc SZero) n)
    sMaybePlus foo@SNothing = foo
