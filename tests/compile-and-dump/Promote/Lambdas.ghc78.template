Promote/Lambdas.hs:0:0: Splicing declarations
    promote
      [d| foo0 :: a -> b -> a
          foo0 = (\ x y -> x)
          foo1 :: a -> b -> a
          foo1 x = (\ _ -> x)
          foo2 :: a -> b -> a
          foo2 x y = (\ _ -> x) y
          foo3 :: a -> a
          foo3 x = (\ y -> y) x
          foo4 :: a -> b -> c -> a
          foo4 x y z = (\ _ _ -> x) y z
          foo5 :: a -> b -> b
          foo5 x y = (\ x -> x) y
          foo6 :: a -> b -> a
          foo6 a b = (\ x -> \ _ -> x) a b
          foo7 :: a -> b -> b
          foo7 x y = (\ (_, b) -> b) (x, y)
          foo8 :: Foo a b -> a
          foo8 x = (\ (Foo a _) -> a) x
          
          data Foo a b = Foo a b |]
  ======>
    Promote/Lambdas.hs:(0,0)-(0,0)
    foo0 :: forall a b. a -> b -> a
    foo0 = \ x y -> x
    foo1 :: forall a b. a -> b -> a
    foo1 x = \ _ -> x
    foo2 :: forall a b. a -> b -> a
    foo2 x y = \ _ -> x y
    foo3 :: forall a. a -> a
    foo3 x = \ y -> y x
    foo4 :: forall a b c. a -> b -> c -> a
    foo4 x y z = \ _ _ -> x y z
    foo5 :: forall a b. a -> b -> b
    foo5 x y = \ x -> x y
    foo6 :: forall a b. a -> b -> a
    foo6 a b = \ x -> \ _ -> x a b
    foo7 :: forall a b. a -> b -> b
    foo7 x y = \ (_, b) -> b (x, y)
    data Foo a b = Foo a b
    foo8 :: forall a b. Foo a b -> a
    foo8 x = \ (Foo a _) -> a x
    type Foo8Sym1 t = Foo8 t
    data Foo8Sym0 (l :: TyFun (Foo a b) a)
    type instance Apply Foo8Sym0 l = Foo8Sym1 l
    type family Case_0123456789 x arg t where
      Case_0123456789 x arg (Foo a z) = a
    type family Lambda_0123456789 x t where
      Lambda_0123456789 x arg = Case_0123456789 x arg arg
    type Lambda_0123456789Sym2 t t = Lambda_0123456789 t t
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k r -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo7Sym2 t t = Foo7 t t
    data Foo7Sym1 (l :: a) (l :: TyFun b b)
    type instance Apply (Foo7Sym1 l) l = Foo7Sym2 l l
    data Foo7Sym0 (l :: TyFun a (TyFun b b -> *))
    type instance Apply Foo7Sym0 l = Foo7Sym1 l
    type family Case_0123456789 x y arg t where
      Case_0123456789 x y arg (GHC.Tuple.(,) z b) = b
    type family Lambda_0123456789 x y t where
      Lambda_0123456789 x y arg = Case_0123456789 x y arg arg
    type Lambda_0123456789Sym3 t t t = Lambda_0123456789 t t t
    data Lambda_0123456789Sym2 (l :: k) (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym2 l l) l = Lambda_0123456789Sym3 l l l
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k (TyFun k r -> *))
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k (TyFun k r -> *)
                                              -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo6Sym2 t t = Foo6 t t
    data Foo6Sym1 (l :: a) (l :: TyFun b a)
    type instance Apply (Foo6Sym1 l) l = Foo6Sym2 l l
    data Foo6Sym0 (l :: TyFun a (TyFun b a -> *))
    type instance Apply Foo6Sym0 l = Foo6Sym1 l
    type family Case_0123456789 a b x arg t where
      Case_0123456789 a b x arg z = x
    type family Lambda_0123456789 a b x t where
      Lambda_0123456789 a b x arg = Case_0123456789 a b x arg arg
    type Lambda_0123456789Sym4 t t t t = Lambda_0123456789 t t t t
    data Lambda_0123456789Sym3 (l :: k)
                               (l :: k)
                               (l :: k)
                               (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym3 l l l) l = Lambda_0123456789Sym4 l l l l
    data Lambda_0123456789Sym2 (l :: k)
                               (l :: k)
                               (l :: TyFun k (TyFun k r -> *))
    type instance Apply (Lambda_0123456789Sym2 l l) l = Lambda_0123456789Sym3 l l l
    data Lambda_0123456789Sym1 (l :: k)
                               (l :: TyFun k (TyFun k (TyFun k r -> *) -> *))
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k (TyFun k (TyFun k r
                                                                -> *)
                                                       -> *)
                                              -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type family Lambda_0123456789 a b t where
      Lambda_0123456789 a b x = Apply (Apply (Apply Lambda_0123456789Sym0 a) b) x
    type Lambda_0123456789Sym3 t t t = Lambda_0123456789 t t t
    data Lambda_0123456789Sym2 (l :: k) (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym2 l l) l = Lambda_0123456789Sym3 l l l
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k (TyFun k r -> *))
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k (TyFun k r -> *)
                                              -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo5Sym2 t t = Foo5 t t
    data Foo5Sym1 (l :: a) (l :: TyFun b b)
    type instance Apply (Foo5Sym1 l) l = Foo5Sym2 l l
    data Foo5Sym0 (l :: TyFun a (TyFun b b -> *))
    type instance Apply Foo5Sym0 l = Foo5Sym1 l
    type family Lambda_0123456789 x y t where
      Lambda_0123456789 x y x = x
    type Lambda_0123456789Sym3 t t t = Lambda_0123456789 t t t
    data Lambda_0123456789Sym2 (l :: k) (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym2 l l) l = Lambda_0123456789Sym3 l l l
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k (TyFun k r -> *))
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k (TyFun k r -> *)
                                              -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo4Sym3 t t t = Foo4 t t t
    data Foo4Sym2 (l :: a) (l :: b) (l :: TyFun c a)
    type instance Apply (Foo4Sym2 l l) l = Foo4Sym3 l l l
    data Foo4Sym1 (l :: a) (l :: TyFun b (TyFun c a -> *))
    type instance Apply (Foo4Sym1 l) l = Foo4Sym2 l l
    data Foo4Sym0 (l :: TyFun a (TyFun b (TyFun c a -> *) -> *))
    type instance Apply Foo4Sym0 l = Foo4Sym1 l
    type family Case_0123456789 x y z arg arg t where
      Case_0123456789 x y z arg arg (GHC.Tuple.(,) z z) = x
    type family Lambda_0123456789 x y z t t where
      Lambda_0123456789 x y z arg arg = Case_0123456789 x y z arg arg (Apply (Apply Tuple2Sym0 arg) arg)
    type Lambda_0123456789Sym5 t t t t t = Lambda_0123456789 t t t t t
    data Lambda_0123456789Sym4 (l :: k)
                               (l :: k)
                               (l :: k)
                               (l :: k)
                               (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym4 l l l l) l = Lambda_0123456789Sym5 l l l l l
    data Lambda_0123456789Sym3 (l :: k)
                               (l :: k)
                               (l :: k)
                               (l :: TyFun k (TyFun k r -> *))
    type instance Apply (Lambda_0123456789Sym3 l l l) l = Lambda_0123456789Sym4 l l l l
    data Lambda_0123456789Sym2 (l :: k)
                               (l :: k)
                               (l :: TyFun k (TyFun k (TyFun k r -> *) -> *))
    type instance Apply (Lambda_0123456789Sym2 l l) l = Lambda_0123456789Sym3 l l l
    data Lambda_0123456789Sym1 (l :: k)
                               (l :: TyFun k (TyFun k (TyFun k (TyFun k r -> *) -> *) -> *))
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k (TyFun k (TyFun k (TyFun k r
                                                                         -> *)
                                                                -> *)
                                                       -> *)
                                              -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo3Sym1 t = Foo3 t
    data Foo3Sym0 (l :: TyFun a a)
    type instance Apply Foo3Sym0 l = Foo3Sym1 l
    type family Lambda_0123456789 x t where
      Lambda_0123456789 x y = y
    type Lambda_0123456789Sym2 t t = Lambda_0123456789 t t
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k r -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo2Sym2 t t = Foo2 t t
    data Foo2Sym1 (l :: a) (l :: TyFun b a)
    type instance Apply (Foo2Sym1 l) l = Foo2Sym2 l l
    data Foo2Sym0 (l :: TyFun a (TyFun b a -> *))
    type instance Apply Foo2Sym0 l = Foo2Sym1 l
    type family Case_0123456789 x y arg t where
      Case_0123456789 x y arg z = x
    type family Lambda_0123456789 x y t where
      Lambda_0123456789 x y arg = Case_0123456789 x y arg arg
    type Lambda_0123456789Sym3 t t t = Lambda_0123456789 t t t
    data Lambda_0123456789Sym2 (l :: k) (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym2 l l) l = Lambda_0123456789Sym3 l l l
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k (TyFun k r -> *))
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k (TyFun k r -> *)
                                              -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo1Sym1 t = Foo1 t
    data Foo1Sym0 (l :: TyFun a (TyFun a b -> *))
    type instance Apply Foo1Sym0 l = Foo1Sym1 l
    type family Case_0123456789 x arg t where
      Case_0123456789 x arg z = x
    type family Lambda_0123456789 x t where
      Lambda_0123456789 x arg = Case_0123456789 x arg arg
    type Lambda_0123456789Sym2 t t = Lambda_0123456789 t t
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k r -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type family Lambda_0123456789 t t where
      Lambda_0123456789 x y = x
    type Lambda_0123456789Sym2 t t = Lambda_0123456789 t t
    data Lambda_0123456789Sym1 (l :: k) (l :: TyFun k r)
    type instance Apply (Lambda_0123456789Sym1 l) l = Lambda_0123456789Sym2 l l
    data Lambda_0123456789Sym0 (l :: TyFun k (TyFun k r -> *))
    type instance Apply Lambda_0123456789Sym0 l = Lambda_0123456789Sym1 l
    type Foo0Sym0 = Foo0
    type family Foo8 (a :: Foo a b) :: a where
      Foo8 x = Apply (Apply Lambda_0123456789Sym0 x) x
    type family Foo7 (a :: a) (a :: b) :: b where
      Foo7 x y = Apply (Apply (Apply Lambda_0123456789Sym0 x) y) (Apply (Apply Tuple2Sym0 x) y)
    type family Foo6 (a :: a) (a :: b) :: a where
      Foo6 a b = Apply (Apply (Apply (Apply Lambda_0123456789Sym0 a) b) a) b
    type family Foo5 (a :: a) (a :: b) :: b where
      Foo5 x y = Apply (Apply (Apply Lambda_0123456789Sym0 x) y) y
    type family Foo4 (a :: a) (a :: b) (a :: c) :: a where
      Foo4 x y z = Apply (Apply (Apply (Apply (Apply Lambda_0123456789Sym0 x) y) z) y) z
    type family Foo3 (a :: a) :: a where
      Foo3 x = Apply (Apply Lambda_0123456789Sym0 x) x
    type family Foo2 (a :: a) (a :: b) :: a where
      Foo2 x y = Apply (Apply (Apply Lambda_0123456789Sym0 x) y) y
    type family Foo1 (a :: a) :: TyFun a b -> * where
      Foo1 x = Apply Lambda_0123456789Sym0 x
    type Foo0 =
        (Lambda_0123456789Sym0 :: TyFun a (TyFun b a -> *) -> *)
    type FooSym2 t t = Foo t t
    data FooSym1 (l :: a) (l :: TyFun b (Foo a b))
    type instance Apply (FooSym1 l) l = FooSym2 l l
    data FooSym0 (l :: TyFun a (TyFun b (Foo a b) -> *))
    type instance Apply FooSym0 l = FooSym1 l
